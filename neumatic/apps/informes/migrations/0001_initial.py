# Generated by Django 5.1.1 on 2025-09-02 22:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VLClienteUltimaVenta',
            fields=[
                ('id_cliente_id', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('fecha_ultimo_comprobante', models.DateField()),
                ('id_vendedor_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Estadísticas de Clientes sin Ventas',
                'verbose_name_plural': 'Estadísticas de Clientes sin Ventas',
                'db_table': 'VLClienteUltimaVenta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLComisionOperario',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('id_operario_id', models.IntegerField()),
                ('nombre_operario', models.CharField(max_length=50)),
                ('codigo_comprobante_venta', models.CharField(max_length=3)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=19)),
                ('fecha_comprobante', models.DateField()),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('comision_operario', models.DecimalField(decimal_places=2, max_digits=5)),
                ('monto_comision', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Comisiones a Operarios',
                'verbose_name_plural': 'Comisiones a Operarios',
                'db_table': 'VLComisionOperario',
                'ordering': ['nombre_operario', 'fecha_comprobante', 'numero_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLComisionVendedor',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('compro', models.CharField(max_length=3)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=19)),
                ('fecha_comprobante', models.DateField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('reventa', models.CharField(max_length=1)),
                ('id_producto_id', models.IntegerField()),
                ('medida', models.CharField(max_length=15)),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('pje_comision', models.DecimalField(decimal_places=2, max_digits=4)),
                ('monto_comision', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_vendedor_id', models.IntegerField()),
                ('nombre_vendedor', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Comisión Según Facturación',
                'verbose_name_plural': 'Comisión Según Facturación',
                'db_table': 'VLComisionVendedor',
                'ordering': ['nombre_vendedor', 'fecha_comprobante', 'numero_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLComprobantesVencidos',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('fecha_comprobante', models.DateField()),
                ('dias_vencidos', models.IntegerField()),
                ('codigo_comprobante_venta', models.CharField(max_length=3)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=17)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('entrega', models.DecimalField(decimal_places=2, max_digits=14)),
                ('saldo', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_sucursal_id', models.IntegerField()),
                ('id_vendedor_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Comprobantes Vencidos',
                'verbose_name_plural': 'Comprobantes Vencidos',
                'db_table': 'VLComprobantesVencidos',
                'ordering': ['fecha_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLEstadisticasSegunCondicion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_marca_id', models.IntegerField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('id_modelo_id', models.IntegerField()),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('reventa', models.CharField(max_length=1)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('importe', models.DecimalField(decimal_places=2, max_digits=14)),
                ('costo', models.DecimalField(decimal_places=2, max_digits=14)),
                ('fecha_comprobante', models.DateField()),
                ('id_sucursal_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Ventas Según Condición',
                'verbose_name_plural': 'Ventas Según Condición',
                'db_table': 'VLEstadisticasSegunCondicion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLEstadisticasVentas',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('id_producto_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('fecha_comprobante', models.DateField()),
                ('id_cliente_id', models.IntegerField()),
                ('id_sucursal_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Estadísticas de Ventas',
                'verbose_name_plural': 'Estadísticas de Ventas',
                'db_table': 'VLEstadisticasVentas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLEstadisticasVentasMarca',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comprobante', models.CharField(max_length=19)),
                ('fecha_comprobante', models.DateField()),
                ('id_cliente_id', models.IntegerField()),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('medida', models.CharField(max_length=15)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('compra', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_sucursal_id', models.IntegerField()),
                ('id_marca_id', models.IntegerField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_modelo_id', models.IntegerField()),
                ('nombre_modelo', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Estadísticas de Ventas por Marca y Artículo',
                'verbose_name_plural': 'Estadísticas de Ventas por Marca y Artículo',
                'db_table': 'VLEstadisticasVentasMarca',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLEstadisticasVentasMarcaVendedor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comprobante', models.CharField(max_length=19)),
                ('fecha_comprobante', models.DateField()),
                ('id_cliente_id', models.IntegerField()),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('medida', models.CharField(max_length=15)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_sucursal_id', models.IntegerField()),
                ('id_vendedor_id', models.IntegerField()),
                ('id_marca_id', models.IntegerField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_modelo_id', models.IntegerField()),
                ('nombre_modelo', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Estadísticas de Ventas por Marca y Familia por Vendedor',
                'verbose_name_plural': 'Estadísticas de Ventas por Marca y Familia por Vendedor',
                'db_table': 'VLEstadisticasVentasMarcaVendedor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLEstadisticasVentasProvincia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('fecha_comprobante', models.DateField()),
                ('id_sucursal_id', models.IntegerField()),
                ('id_vendedor_id', models.IntegerField()),
                ('id_provincia', models.IntegerField()),
                ('nombre_provincia', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Estadísticas de Ventas por Provincia',
                'verbose_name_plural': 'Estadísticas de Ventas por Provincia',
                'db_table': 'VLEstadisticasVentasProvincia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLEstadisticasVentasVendedor',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('fecha_comprobante', models.DateField()),
                ('id_sucursal_id', models.IntegerField()),
                ('id_vendedor_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Estadísticas de Ventas por Vendedor',
                'verbose_name_plural': 'Estadísticas de Ventas por Vendedor',
                'db_table': 'VLEstadisticasVentasVendedor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLEstadisticasVentasVendedorCliente',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_vendedor_id', models.IntegerField()),
                ('nombre_vendedor', models.CharField(max_length=30)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('fecha_comprobante', models.DateField()),
                ('id_sucursal_id', models.IntegerField()),
                ('no_estadist', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Estadísticas de Ventas Vendedor Clientes',
                'verbose_name_plural': 'Estadísticas de Ventas Vendedor Clientes',
                'db_table': 'VLEstadisticasVentasVendedorCliente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLIVAVentasFULL',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('codigo_iva', models.CharField(max_length=4)),
                ('cuit', models.IntegerField()),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('codigo_comprobante_venta', models.CharField(max_length=3)),
                ('fecha_comprobante', models.DateField()),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=17)),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('exento', models.DecimalField(decimal_places=2, max_digits=14)),
                ('iva', models.DecimalField(decimal_places=2, max_digits=14)),
                ('percep_ib', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_sucursal_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Libro de I.V.A. Ventas - Detalle',
                'verbose_name_plural': 'Libro de I.V.A. Ventas - Detalle',
                'db_table': 'VLIVAVentasFULL',
                'ordering': ['fecha_comprobante', 'numero_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLIVAVentasProvincias',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('id_provincia', models.IntegerField()),
                ('nombre_provincia', models.CharField(max_length=30)),
                ('fecha_comprobante', models.DateField()),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('exento', models.DecimalField(decimal_places=2, max_digits=14)),
                ('iva', models.DecimalField(decimal_places=2, max_digits=14)),
                ('percep_ib', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_sucursal_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Libro de I.V.A. Ventas - Totales por Provincias',
                'verbose_name_plural': 'Libro de I.V.A. Ventas - Totales por Provincias',
                'db_table': 'VLIVAVentasProvincias',
                'ordering': ['nombre_provincia'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLIVAVentasSitrib',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('fecha_comprobante', models.DateField()),
                ('codigo_iva', models.CharField(max_length=4)),
                ('nombre_iva', models.CharField(max_length=25)),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('exento', models.DecimalField(decimal_places=2, max_digits=14)),
                ('iva', models.DecimalField(decimal_places=2, max_digits=14)),
                ('percep_ib', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_sucursal_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Libro de I.V.A. Ventas - Totales para SITRIB',
                'verbose_name_plural': 'Libro de I.V.A. Ventas - Totales para SITRIB',
                'db_table': 'VLIVAVentasSitrib',
                'ordering': ['codigo_iva'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLLista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_producto_id', models.IntegerField()),
                ('id_cai_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('tipo_producto', models.CharField(max_length=1)),
                ('medida', models.CharField(max_length=15)),
                ('segmento', models.CharField(max_length=3)),
                ('unidad', models.IntegerField()),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_modelo_id', models.IntegerField()),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('id_marca_id', models.IntegerField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('costo', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('id_alicuota_iva_id', models.IntegerField()),
                ('alicuota_iva', models.DecimalField(decimal_places=2, max_digits=6)),
                ('minimo', models.IntegerField()),
                ('despacho_1', models.CharField(max_length=16)),
                ('despacho_2', models.CharField(max_length=16)),
                ('fecha_fabricacion', models.CharField(max_length=6)),
            ],
            options={
                'verbose_name': 'Lista de Precios',
                'verbose_name_plural': 'Lista de Precios',
                'db_table': 'VLLista',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLListaRevendedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_producto_id', models.IntegerField()),
                ('id_cai_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('medida', models.CharField(max_length=15)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('id_marca_id', models.IntegerField()),
                ('id_modelo_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Lista de Precios a Revendedor',
                'verbose_name_plural': 'Lista de Precios a Revendedor',
                'db_table': 'VLListaRevendedor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLMercaderiaPorCliente',
            fields=[
                ('id_cliente_id', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('numero', models.CharField(max_length=13)),
                ('fecha_comprobante', models.DateField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('medida', models.CharField(max_length=15)),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Mercadería por Cliente',
                'verbose_name_plural': 'Mercadería por Cliente',
                'db_table': 'VLMercaderiaPorCliente',
                'ordering': ['id_cliente_id', 'fecha_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLPercepIBSubcuentaDetallado',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('sub_cuenta', models.IntegerField()),
                ('nombre_cliente_padre', models.CharField(max_length=50)),
                ('compro', models.CharField(max_length=3)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('fecha_comprobante', models.DateField()),
                ('comprobante', models.CharField(max_length=30)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('cuit', models.IntegerField()),
                ('neto', models.DecimalField(decimal_places=2, max_digits=14)),
                ('percep_ib', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Percepciones por Sub Cuentas - Detallado',
                'verbose_name_plural': 'Percepciones por Sub Cuentas - Detallado',
                'db_table': 'VLPercepIBSubcuentaDetallado',
                'ordering': ['sub_cuenta'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLPercepIBSubcuentaTotales',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('fecha_comprobante', models.DateField()),
                ('sub_cuenta', models.IntegerField()),
                ('nombre_cliente_padre', models.CharField(max_length=50)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('neto', models.DecimalField(decimal_places=2, max_digits=14)),
                ('percep_ib', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Percepciones por Sub Cuentas - Totales',
                'verbose_name_plural': 'Percepciones por Sub Cuentas - Totales',
                'db_table': 'VLPercepIBSubcuentaTotales',
                'ordering': ['sub_cuenta'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLPercepIBVendedorDetallado',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('id_vendedor_id', models.IntegerField()),
                ('nombre_vendedor', models.CharField(max_length=30)),
                ('compro', models.CharField(max_length=3)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('fecha_comprobante', models.DateField()),
                ('comprobante', models.CharField(max_length=30)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('cuit', models.IntegerField()),
                ('neto', models.DecimalField(decimal_places=2, max_digits=14)),
                ('percep_ib', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Percepciones por Vendedor - Detallado',
                'verbose_name_plural': 'Percepciones por Vendedor - Detallado',
                'db_table': 'VLPercepIBVendedorDetallado',
                'ordering': ['nombre_vendedor'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLPercepIBVendedorTotales',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('fecha_comprobante', models.DateField()),
                ('id_vendedor_id', models.IntegerField()),
                ('nombre_vendedor', models.CharField(max_length=30)),
                ('neto', models.DecimalField(decimal_places=2, max_digits=14)),
                ('percep_ib', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Percepciones por Vendedor - Totales',
                'verbose_name_plural': 'Percepciones por Vendedor - Totales',
                'db_table': 'VLPercepIBVendedorTotales',
                'ordering': ['id_vendedor_id'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLPrecioDiferente',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('id_vendedor_id', models.IntegerField()),
                ('nombre_vendedor', models.CharField(max_length=30)),
                ('codigo_comprobante_venta', models.CharField(max_length=3)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('fecha_comprobante', models.DateField()),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=19)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('precio_lista', models.DecimalField(decimal_places=2, max_digits=12)),
                ('diferencia', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('adicional', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
            options={
                'verbose_name': 'Diferencias de Precios en Facturación',
                'verbose_name_plural': 'Diferencias de Precios en Facturación',
                'db_table': 'VLPrecioDiferente',
                'ordering': ['nombre_vendedor', 'fecha_comprobante', 'numero_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLRemitosClientes',
            fields=[
                ('id_cliente_id', models.IntegerField(primary_key=True, serialize=False)),
                ('id_comprobante_venta_id', models.IntegerField()),
                ('codigo_comprobante_venta', models.CharField(max_length=3)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('fecha_comprobante', models.DateField()),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('numero', models.CharField(max_length=13)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('medida', models.CharField(max_length=15)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Remitos por Clientes',
                'verbose_name_plural': 'Remitos por Clientes',
                'db_table': 'VLRemitosClientes',
                'ordering': ['id_cliente_id', 'fecha_comprobante', 'numero_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLRemitosPendientes',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('fecha_comprobante', models.DateField()),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=17)),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('medida', models.CharField(max_length=15)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_vendedor_id', models.IntegerField()),
                ('id_sucursal_fac', models.IntegerField()),
                ('id_sucursal_cli', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Remitos Pendientes',
                'verbose_name_plural': 'Remitos Pendientes',
                'db_table': 'VLRemitosPendientes',
                'ordering': ['nombre_cliente', 'fecha_comprobante', 'numero_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLRemitosVendedor',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('fecha_comprobante', models.DateField()),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=17)),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('medida', models.CharField(max_length=15)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_vendedor_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Remitos por Vendedor',
                'verbose_name_plural': 'Remitos por Vendedor',
                'db_table': 'VLRemitosVendedor',
                'ordering': ['nombre_cliente', 'fecha_comprobante', 'numero_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLReposicionStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_deposito', models.IntegerField()),
                ('nombre_producto_deposito', models.CharField(max_length=50)),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_modelo_id', models.IntegerField()),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('id_marca_id', models.IntegerField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('id_producto_id', models.IntegerField()),
                ('id_cai_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('medida', models.CharField(max_length=15)),
                ('segmento', models.CharField(max_length=3)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('minimo', models.IntegerField()),
                ('stock', models.IntegerField()),
                ('faltante', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Reposición de Mercadería',
                'verbose_name_plural': 'Reposición de Mercadería',
                'db_table': 'VLReposicionStock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLResumenCtaCte',
            fields=[
                ('id_cliente_id', models.IntegerField(primary_key=True, serialize=False)),
                ('razon_social', models.CharField(max_length=50)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('numero', models.CharField(max_length=13)),
                ('fecha_comprobante', models.DateField()),
                ('remito', models.CharField(max_length=15)),
                ('condicion_comprobante', models.IntegerField()),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('entrega', models.DecimalField(decimal_places=2, max_digits=14)),
                ('saldo_acumulado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('intereses', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Resumen de Cta. Cte.',
                'verbose_name_plural': 'Resumen de Cta. Cte.',
                'db_table': 'VLResumenCtaCte',
                'ordering': ['razon_social'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLSaldosClientes',
            fields=[
                ('id_cliente_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fecha_comprobante', models.DateField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('domicilio_cliente', models.CharField(max_length=50)),
                ('nombre_localidad', models.CharField(max_length=30)),
                ('codigo_postal', models.CharField(max_length=5)),
                ('telefono_cliente', models.CharField(max_length=15)),
                ('sub_cuenta', models.CharField(max_length=6)),
                ('id_vendedor_id', models.IntegerField()),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Saldos de Clientes',
                'verbose_name_plural': 'Saldos de Clientes',
                'db_table': 'VLSaldosClientes',
                'ordering': ['nombre_cliente'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLStockFecha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_modelo_id', models.IntegerField()),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('id_marca_id', models.IntegerField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('id_producto_id', models.IntegerField()),
                ('id_cai_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('medida', models.CharField(max_length=15)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('stock', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Listado de Stock a Fecha',
                'verbose_name_plural': 'Listado de Stock a Fecha',
                'db_table': 'VLStockFecha',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLStockGeneralSucursal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_modelo_id', models.IntegerField()),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('id_marca_id', models.IntegerField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('id_producto', models.IntegerField()),
                ('id_cai_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('medida', models.CharField(max_length=15)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('stock', models.IntegerField()),
                ('otras_suc', models.IntegerField()),
                ('stock_total', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Stock General por Sucursal',
                'verbose_name_plural': 'Stock General por Sucursal',
                'db_table': 'VLStockGeneralSucursal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLStockSucursal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_modelo_id', models.IntegerField()),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('id_marca_id', models.IntegerField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('id_producto_id', models.IntegerField()),
                ('id_cai_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('medida', models.CharField(max_length=15)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('stock', models.IntegerField()),
                ('costo_inventario', models.DecimalField(decimal_places=2, max_digits=12)),
                ('id_deposito_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Listado de Stock por Sucursal',
                'verbose_name_plural': 'Listado de Stock por Sucursal',
                'db_table': 'VLStockSucursal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLStockUnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_familia_id', models.IntegerField()),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('id_modelo_id', models.IntegerField()),
                ('nombre_modelo', models.CharField(max_length=50)),
                ('id_marca_id', models.IntegerField()),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('id_producto_id', models.IntegerField()),
                ('id_cai_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('medida', models.CharField(max_length=15)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('stock', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Listado de Stock Único',
                'verbose_name_plural': 'Listado de Stock Único',
                'db_table': 'VLStockUnico',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLTablaDinamicaDetalleVentas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_factura_id', models.IntegerField()),
                ('nombre_sucursal', models.CharField(max_length=50)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('fecha_comprobante', models.DateField()),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('condicion_comprobante', models.IntegerField()),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('mayorista', models.BooleanField()),
                ('reventa', models.CharField(max_length=1)),
                ('id_producto_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('segmento', models.CharField(max_length=3)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('costo', models.DecimalField(decimal_places=2, max_digits=12)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('no_gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('iva', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('no_estadist', models.BooleanField()),
                ('id_user_id', models.IntegerField()),
                ('codigo_postal', models.CharField(max_length=5)),
                ('nombre_localidad', models.CharField(max_length=30)),
                ('nombre_provincia', models.CharField(max_length=30)),
                ('nombre_vendedor', models.CharField(max_length=30)),
                ('comision', models.CharField(max_length=1)),
                ('id_operario_id', models.IntegerField()),
                ('nombre_operario', models.CharField(max_length=50)),
                ('promo', models.BooleanField()),
                ('libro_iva', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Tablas Dinámicas de Ventas - Detalle de Ventas por Productos',
                'verbose_name_plural': 'Tablas Dinámicas de Ventas - Detalle de Ventas por Productos',
                'db_table': 'VLTablaDinamicaDetalleVentas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLTablaDinamicaEstadistica',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_factura_id', models.IntegerField()),
                ('nombre_sucursal', models.CharField(max_length=50)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('fecha_comprobante', models.DateField()),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('condicion_comprobante', models.IntegerField()),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('mayorista', models.BooleanField()),
                ('reventa', models.CharField(max_length=1)),
                ('id_producto_id', models.IntegerField()),
                ('cai', models.CharField(max_length=20)),
                ('nombre_producto', models.CharField(max_length=50)),
                ('nombre_producto_marca', models.CharField(max_length=50)),
                ('nombre_producto_familia', models.CharField(max_length=50)),
                ('segmento', models.CharField(max_length=3)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('costo', models.DecimalField(decimal_places=2, max_digits=12)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=6)),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('no_gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('no_estadist', models.BooleanField()),
                ('id_user_id', models.IntegerField()),
                ('codigo_postal', models.CharField(max_length=5)),
                ('nombre_localidad', models.CharField(max_length=30)),
                ('nombre_provincia', models.CharField(max_length=30)),
                ('nombre_vendedor', models.CharField(max_length=30)),
                ('comision', models.CharField(max_length=1)),
                ('id_operario_id', models.IntegerField()),
                ('nombre_operario', models.CharField(max_length=50)),
                ('promo', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Tablas Dinámicas de Ventas - Tablas para Estadísticas',
                'verbose_name_plural': 'Tablas Dinámicas de Ventas - Tablas para Estadísticas',
                'db_table': 'VLTablaDinamicaEstadistica',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLTablaDinamicaVentas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_sucursal', models.CharField(max_length=50)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('fecha_comprobante', models.DateField()),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('condicion_comprobante', models.IntegerField()),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('mayorista', models.BooleanField()),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('exento', models.DecimalField(decimal_places=2, max_digits=14)),
                ('iva', models.DecimalField(decimal_places=2, max_digits=12)),
                ('percepcion', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('no_estadist', models.BooleanField()),
                ('id_user_id', models.IntegerField()),
                ('codigo_postal', models.CharField(max_length=5)),
                ('nombre_localidad', models.CharField(max_length=30)),
                ('nombre_provincia', models.CharField(max_length=30)),
                ('nombre_vendedor', models.CharField(max_length=30)),
                ('comision', models.CharField(max_length=1)),
                ('promo', models.BooleanField()),
                ('libro_iva', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Tablas Dinámicas de Ventas - Ventas por Comprobantes',
                'verbose_name_plural': 'Tablas Dinámicas de Ventas - Ventas por Comprobantes',
                'db_table': 'VLTablaDinamicaVentas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLTotalRemitosClientes',
            fields=[
                ('id_cliente_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fecha_comprobante', models.DateField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('domicilio_cliente', models.CharField(max_length=50)),
                ('codigo_postal', models.CharField(max_length=5)),
                ('nombre_iva', models.CharField(max_length=25)),
                ('cuit', models.IntegerField()),
                ('telefono_cliente', models.CharField(max_length=15)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
            ],
            options={
                'verbose_name': 'Totales de Remitos por Clientes',
                'verbose_name_plural': 'Totales de Remitos por Clientes',
                'db_table': 'VLTotalRemitosClientes',
                'ordering': ['nombre_cliente'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLVentaCompro',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('codigo_comprobante_venta', models.CharField(max_length=3)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=17)),
                ('fecha_comprobante', models.DateField()),
                ('dias_vencimiento', models.IntegerField()),
                ('condicion', models.CharField(max_length=9)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('iva', models.DecimalField(decimal_places=2, max_digits=14)),
                ('percep_ib', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_sucursal_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Ventas por Comprobantes',
                'verbose_name_plural': 'Ventas por Comprobantes',
                'db_table': 'VLVentaCompro',
                'ordering': ['comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLVentaComproLocalidad',
            fields=[
                ('id_cliente_id', models.IntegerField(primary_key=True, serialize=False)),
                ('id_sucursal_id', models.IntegerField()),
                ('fecha_comprobante', models.DateField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('cuit', models.IntegerField()),
                ('codigo_postal', models.CharField(max_length=5)),
                ('codigo_comprobante_venta', models.CharField(max_length=3)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=17)),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('exento', models.DecimalField(decimal_places=2, max_digits=14)),
                ('iva', models.DecimalField(decimal_places=2, max_digits=14)),
                ('percep_ib', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('iniciales', models.CharField(max_length=3)),
            ],
            options={
                'verbose_name': 'Ventas por Localidad',
                'verbose_name_plural': 'Ventas por Localidad',
                'db_table': 'VLVentaComproLocalidad',
                'ordering': ['fecha_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLVentaMostrador',
            fields=[
                ('id_detalle_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_comprobante_venta', models.CharField(max_length=50)),
                ('codigo_comprobante_venta', models.CharField(max_length=3)),
                ('letra_comprobante', models.CharField(max_length=1)),
                ('numero_comprobante', models.IntegerField()),
                ('comprobante', models.CharField(max_length=17)),
                ('fecha_comprobante', models.DateField()),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('mayorista', models.BooleanField()),
                ('reventa', models.CharField(max_length=1)),
                ('id_producto_id', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=50)),
                ('tipo_producto', models.CharField(max_length=1)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=7)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_sucursal_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Ventas por Mostrador',
                'verbose_name_plural': 'Ventas por Mostrador',
                'db_table': 'VLVentaMostrador',
                'ordering': ['fecha_comprobante', 'numero_comprobante'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLVentaSinEstadistica',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_comprobante', models.DateField()),
                ('comprobante', models.CharField(max_length=19)),
                ('id_cliente_id', models.IntegerField()),
                ('nombre_cliente', models.CharField(max_length=50)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_vendedor_id', models.IntegerField()),
                ('nombre_vendedor', models.CharField(max_length=30)),
                ('sub_cuenta', models.IntegerField()),
                ('id_sucursal_id', models.IntegerField()),
                ('nombre_sucursal', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Comprobantes sin Estadísticas',
                'verbose_name_plural': 'Comprobantes sin Estadísticas',
                'db_table': 'vlVentaSinEstadistica',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VLVentasResumenIB',
            fields=[
                ('id_factura', models.IntegerField(primary_key=True, serialize=False)),
                ('fecha_comprobante', models.DateField()),
                ('gravado', models.DecimalField(decimal_places=2, max_digits=14)),
                ('iva', models.DecimalField(decimal_places=2, max_digits=14)),
                ('total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('id_provincia_id', models.IntegerField()),
                ('nombre_provincia', models.CharField(max_length=30)),
                ('suc_imp', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Resumen de Ventas por Provincias',
                'verbose_name_plural': 'Resumen de Ventas por Provincias',
                'db_table': 'VLVentasResumenIB',
                'ordering': ['fecha_comprobante'],
                'managed': False,
            },
        ),
    ]
