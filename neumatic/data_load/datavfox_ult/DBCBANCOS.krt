*** ADVERTENCIA *** ¡NO MODIFIQUE ESTE ARCHIVO DE NINGUNA FORMA! *** ADVERTENCIA ***

**__RI_HEADER!@ Do NOT REMOVE or MODIFY this line!!!! @!__RI_HEADER**
procedure RIDELETE
local llRetVal
llRetVal=.t.
 IF (ISRLOCKED() and !deleted()) OR !RLOCK()
    llRetVal=.F.
  ELSE
    IF !deleted()
      DELETE
      IF CURSORGETPROP('BUFFERING') > 1
      	=TABLEUPDATE()
      ENDIF
      llRetVal=pnerror=0
    ENDIF not already deleted
  ENDIF
  UNLOCK RECORD (RECNO())
RETURN llRetVal

procedure RIUPDATE
lparameters tcFieldName,tcNewValue,tcCascadeParent
local llRetVal
llRetVal=.t.
 IF ISRLOCKED() OR !RLOCK()
    llRetVal=.F.
  ELSE
    IF EVAL(tcFieldName)<>tcNewValue
      PRIVATE pcCascadeParent
      pcCascadeParent=upper(iif(type("tcCascadeParent")<>"C","",tcCascadeParent))
      REPLACE (tcFieldName) WITH tcNewValue
      IF CURSORGETPROP('BUFFERING') > 1
      	=TABLEUPDATE()
      ENDIF
      llRetVal=pnerror=0
    ENDIF values don't already match
  ENDIF it's locked already, or I was able to lock it
  UNLOCK RECORD (RECNO())
return llRetVal

procedure rierror
parameters tnErrNo,tcMessage,tcCode,tcProgram
local lnErrorRows,lnXX
lnErrorRows=alen(gaErrors,1)
if type('gaErrors[lnErrorRows,1]')<>"L"
  dimension gaErrors[lnErrorRows+1,alen(gaErrors,2)]
  lnErrorRows=lnErrorRows+1
endif
gaErrors[lnErrorRows,1]=tnErrNo
gaErrors[lnErrorRows,2]=tcMessage
gaErrors[lnErrorRows,3]=tcCode
gaErrors[lnErrorRows,4]=""
lnXX=1
do while !empty(program(lnXX))
  gaErrors[lnErrorRows,4]=gaErrors[lnErrorRows,4]+","+;
  program(lnXX)
  lnXX=lnXX+1
enddo
gaErrors[lnErrorRows,5]=pcParentDBF
gaErrors[lnErrorRows,6]=pnParentRec
gaErrors[lnErrorRows,7]=pcParentID
gaErrors[lnErrorRows,8]=pcParentExpr
gaErrors[lnErrorRows,9]=pcChildDBF
gaErrors[lnErrorRows,10]=pnChildRec
gaErrors[lnErrorRows,11]=pcChildID
gaErrors[lnErrorRows,12]=pcChildExpr
return tnErrNo


PROCEDURE riopen
PARAMETERS tcTable,tcOrder

LOCAL lcCurWkArea,lcNewWkArea,lnInUseSpot,lnOccurs,lnOccurance
lnInUseSpot=0
lnOccurs = OCCURS(UPPER(tcTable)+"*",UPPER(pcRIcursors))
FOR lnOccurance = 1 TO lnOccurs
	lnInUseSpot=ATC(tcTable+"*",pcRIcursors,lnOccurance)
	IF ISDIGIT(SUBSTR(pcRIcursors,lnInUseSpot-1,1)) OR;
		 EMPTY(SUBSTR(pcRIcursors,lnInUseSpot-1,1))
		EXIT
	ENDIF
	lnInUseSpot=0
ENDFOR

IF lnInUseSpot=0
  lcCurWkArea=select()
  SELECT 0
  lcNewWkArea=select()
  IF NOT EMPTY(tcOrder)
    USE (tcTable) AGAIN ORDER (tcOrder) ;
      ALIAS ("__ri"+LTRIM(STR(SELECT()))) share
  ELSE
    USE (tcTable) AGAIN ALIAS ("__ri"+LTRIM(STR(SELECT()))) share
  ENDIF
  if pnerror=0
    pcRIcursors=pcRIcursors+upper(tcTable)+"?"+STR(SELECT(),5)
  else
    lcNewWkArea=0
  endif something bad happened while attempting to open the file
ELSE
  lcNewWkArea=val(substr(pcRIcursors,lnInUseSpot+len(tcTable)+1,5))
  pcRIcursors = strtran(pcRIcursors,upper(tcTable)+"*"+str(lcNewWkArea,5),;
    upper(tcTable)+"?"+str(lcNewWkArea,5))
  IF NOT EMPTY(tcOrder)
    SET ORDER TO (tcOrder) IN (lcNewWkArea)
  ENDIF sent an order
  if pnerror<>0
    lcNewWkArea=0
  endif something bad happened while setting order
ENDIF
RETURN (lcNewWkArea)


PROCEDURE riend
PARAMETERS tlSuccess
local lnXX,lnSpot,lcWorkArea
IF tlSuccess
  END TRANSACTION
ELSE
  SET DELETED OFF
  ROLLBACK
  SET DELETED ON
ENDIF
IF EMPTY(pcRIolderror)
  ON ERROR
ELSE
  ON ERROR &pcRIolderror.
ENDIF
FOR lnXX=1 TO occurs("*",pcRIcursors)
  lnSpot=atc("*",pcRIcursors,lnXX)+1
  USE IN (VAL(substr(pcRIcursors,lnSpot,5)))
ENDFOR
IF pcOldCompat = "ON"
	SET COMPATIBLE ON
ENDIF
IF pcOldDele="OFF"
  SET DELETED OFF
ENDIF
IF pcOldExact="ON"
  SET EXACT ON
ENDIF
IF pcOldTalk="ON"
  SET TALK ON
ENDIF
do case
  case empty(pcOldDBC)
    set data to
  case pcOldDBC<>DBC()
    set data to (pcOldDBC)
endcase
RETURN .T.


PROCEDURE rireuse
* rireuse.prg
PARAMETERS tcTableName,tcWkArea
pcRIcursors = strtran(pcRIcursors,upper(tcTableName)+"?"+str(tcWkArea,5),;
  upper(tcTableName)+"*"+str(tcWkArea,5))
RETURN .t.

********************************************************************************
** "Desencadenador Delete de integridad referencial para" bancos
PROCEDURE __RI_DELETE_bancos
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("BANCOS")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CUENTA TO lcParentID,pcParentID
pcParentExpr="CUENTA"
lcChildWkArea=riopen("librobanco","cuenta")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CUENTA=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CUENTA
  pcChildExpr="CUENTA"
  llRetVal=ridelete()
ENDSCAN get all of the librobanco records
=rireuse("librobanco",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenador Delete de integridad referencial para" bancos
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_bancos
** "Desencadenador Update de integridad referencial para" bancos
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("BANCOS")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CUENTA")
pcParentID=lcOldParentID
pcParentExpr="CUENTA"
lcParentID=CUENTA
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("librobanco")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CUENTA=lcOldParentID
    pnChildRec=recno()
    pcChildID=CUENTA
    pcChildExpr="CUENTA"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CUENTA",lcParentID,"BANCOS")
  ENDSCAN get all of the librobanco records
  =rireuse("librobanco",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenador Update de integridad referencial para" bancos
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_librobanco
** "Desencadenador Update de integridad referencial para" librobanco
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("BANCOS")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="BANCOS")
  SELECT (lcChildWkArea)
  lcChildID=CUENTA
  lcOldChildID=oldval("CUENTA")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CUENTA"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("bancos","cuenta")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("bancos",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "bancos"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenador Update de integridad referencial para" librobanco
********************************************************************************

********************************************************************************
** "Desencadenador Insert de integridad referencial para" librobanco
PROCEDURE __RI_INSERT_librobanco
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("BANCOS")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CUENTA
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CUENTA"
lcParentWkArea=riopen("bancos","cuenta")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("bancos",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenador Insert de integridad referencial para" librobanco
********************************************************************************
**__RI_FOOTER!@ Do NOT REMOVE or MODIFY this line!!!! @!__RI_FOOTER**
þòÿ    »%  »%                        Óú
   %          â$  ·  t!          ü  U  «  ®÷  þ T÷  üaýþ %üCêÂð C'
	ñ CS
ýù9 þ T÷  ü-ýþ ù þ %üC'
ýù þ þ %üCû	 BUFFERINGêøýùx þ	 üCêýþ þ T÷  ü÷ ø ýþ þ þ
 Z#üCOýþ	 Bü÷  ýþ U  LLRETVAL PNERRORþ  ¯÷  ÷ ÷ þ ®÷ þ T÷ üaýþ %üCêÂñ CS
ýù@ þ T÷ ü-ýþ ùä þ %üC÷  Î÷ ýùà þ 5÷ þ3 T÷ üCCCÙ tcCascadeParentbÙ Cò Ù  ó ÷ 6fýþ >ü÷  ýÑü÷ ýþ %üCû	 BUFFERINGêøýùË þ	 üCêýþ þ T÷ ü÷ ø ýþ þ þ
 Z#üCOýþ	 Bü÷ ýþ U  TCFIELDNAME
 TCNEWVALUE TCCASCADEPARENT LLRETVAL PCCASCADEPARENT PNERROR' 4÷  ÷ ÷ ÷ þ ®÷ ÷ þ T÷ üCë÷ øÍýþ+ %üCû gaErrors[lnErrorRows,1]bÙ Lýù þ ö ü÷ øýüCë÷ øÍýþ T÷ ü÷ øýþ þ Tö ü÷ ýüøýü÷  ýþ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýüÙ  ýþ T÷ üøýþ +üCC÷ t¡
ýùOþ, Tö ü÷ ýüøýüC ÷ øö Ù ,C÷ týþ T÷ ü÷ øýþ þ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýü÷	 ýþ Tö ü÷ ýüøýü÷
 ýþ Tö ü÷ ýüø	ýü÷ ýþ Tö ü÷ ýüø
ýü÷ ýþ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýü÷ ýþ	 Bü÷  ýþ U  TNERRNO	 TCMESSAGE TCCODE	 TCPROGRAM LNERRORROWS LNXX GAERRORS PCPARENTDBF PNPARENTREC
 PCPARENTID PCPARENTEXPR
 PCCHILDDBF
 PNCHILDREC	 PCCHILDID PCCHILDEXPRV 4÷  ÷ þ ®÷ ÷ ÷ ÷ ÷ þ T÷ üø ýþ T÷ üCC÷  fÙ *C÷ f¯ýþ ÷ üøý(ü÷ ýùÀ þ T÷ üC÷  Ù *÷ ÷ ¸ýþ0 %üCC÷ ÷ øø\®ñ CC÷ ÷ øø\¡ýù¯ þ !þ þ T÷ üø ýþ þ %ü÷ ø ýùþ T÷ üCWýþ Fù  þ T÷ üCWýþ %üC÷ ¡
ýù*þ% QÂü÷  ý¼üÙ __riCCCWZAýÃü÷ ýþ ùPþ QÂü÷  ý¼üÙ __riCCCWZAýþ þ %ü÷ ø ýùþ  T÷ ü÷ C÷  fÙ ?CCWøZýþ ùþ T÷ üø ýþ þ ùEþ! T÷ üCC÷ ÷ C÷  >øø\gýþ5 T÷ üC÷ C÷  fÙ *C÷ øZC÷  fÙ ?C÷ øZ¨ýþ %üC÷ ¡
ýùþ G(ü÷ ý(ü÷ ýþ þ %ü÷ ø ýùAþ T÷ üø ýþ þ þ
 Bü÷ ýþ U	  TCTABLE TCORDER LCCURWKAREA LCNEWWKAREA LNINUSESPOT LNOCCURS LNOCCURANCE PCRICURSORS PNERROR 4÷  þ ®÷ ÷ ÷ þ %ü÷  ýù( þ ½þ ù@ þ Gþ þ G þ þ %üC÷ ¡ýù[ þ {û  þ ù~ þ ON ERROR &pcRIolderror.
 þ ÷ üøý(üCÙ *÷ ¯ýùÎ þ T÷ üCÙ *÷ ÷ ¸øýþ QüCC÷ ÷ ø\gýþ þ %ü÷ Ù ONýùë þ GA þ þ %ü÷ Ù OFFýù	þ Gþ þ %ü÷ Ù ONýù&þ G þ þ %ü÷	 Ù ONýùCþ G2 þ þ HùTùþ üC÷
 ¡ýùiþ G(þ ü÷
 Cêýùþ G(ü÷
 ýþ þ Büaýþ U 	 TLSUCCESS LNXX LNSPOT
 LCWORKAREA PCRIOLDERROR PCRICURSORS PCOLDCOMPAT	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDDBCJ  4÷  ÷ þ5 T÷ üC÷ C÷  fÙ ?C÷ øZC÷  fÙ *C÷ øZ¨ýþ Büaýþ U  TCTABLENAME TCWKAREA PCRICURSORSç ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùëþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ BANCOSýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CUENTAýþ$ T÷ üCÙ
 librobancoÙ cuentaö ýþ %ü÷ ø ýùÖþ %üí=øýùËþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùOþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CUENTAýþ T÷  üCö ýþ þ üCÙ
 librobanco ÷ ö ýþ %ü÷  
ýù®þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÍþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CUENTA RIOPEN RIEND RIDELETE RIREUSEF ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùëþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ BANCOSýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CUENTAê_ýþ T÷ ü÷ ýþ T÷ üÙ CUENTAýþ T÷ ü÷ ýþ %ü÷ ÷ ýùþ T÷ üCÙ
 librobancoö ýþ %ü÷ ø ýùþ %üí=øýù þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùªþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CUENTAýþ %ü÷  
ýùþ !þ þ$ T÷  üCÙ CUENTA ÷ Ù BANCOSö ýþ þ üCÙ
 librobanco ÷ ö ýþ %ü÷  
ýù	þ %üí=øýùòþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýù,þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA CUENTA RIOPEN RIEND RIUPDATE RIREUSE ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùëþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ BANCOSýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ@ %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù BANCOS
ýùFþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CUENTAê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CUENTAýþ %ü÷ ÷ ýùBþ  T÷ üCÙ bancosÙ cuentaö ýþ %ü÷ ø ýù`þ %üí=øýùKþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ bancos ÷ ö ýþ %ü÷  
ýù>þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù'þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùrþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U   LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CUENTA RIOPEN RIEND RIREUSE RIERRORû ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùëþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ BANCOSýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CUENTAýþ  T÷ üCÙ bancosÙ cuentaö ýþ %ü÷ ø ýùäþ %üí=øýùÏþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ bancos ÷ ö ýþ %ü÷  
ýùÂþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù«þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùáþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CUENTA RIOPEN RIEND RIREUSE RIERROR RIDELETE,     ÿÿ RIUPDATEî     ÿÿ rierror>    ÿÿ riopen    ÿÿ riendÑ    ÿÿ rireuseâ	    ÿÿ __RI_DELETE_bancosT
    ÿÿ __RI_UPDATE_bancos    ÿÿ __RI_UPDATE_librobancoJ    ÿÿ __RI_INSERT_librobancoV    ÿÿ3 q ± Á±  Ñ A Ñ A A A ¡  2 ñ q ± A±  1q 1Ñ A A A ¡  2 1± 1±ÑA Ñ 1ÂA  3 ± rÑ ±q¡A A Ñ A Á  Á R áA  Ñ A  R1A Ñ A A ¡ 3 q ñ Ñ Q  a A a A ñ   ±A Ñ¡QA 1a A Aa A 1a A 1a A Ñ ñ a Á A q 3 ² Rq 4 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ !A q q q q q Á ± Á ¡ Á Á 1A± A q A ñ ¡  Á Ñ 1á A ±á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ !A q q q q q q q Á ± Á ¡ Á Á aÑ 1Ñ ±± A ¡ q A ñ ¡ !Á Ñ 1á A A AA ±á ± A ¡  A A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ !A q q q q q q q Á ± Á ¡ Ñ añ ñ Ñ 1± A ¡ q A ñ !ñ qá 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ !A q q q q Á ± Á ¡ Ñ ñ ñ Ñ 1± A ¡ q A ñ !ñ qá 1± A ¡  A ± A ¡  3                    ]           µ  ó     $     1  (   >   E  /  E   c   B  Õ  q      ê  1        Q  X  ¢   Õ   x  G$  ï   &  k$  0  F  s  '0  9     )   »%                  